% 'program = 'function_definition 'compound_statement 'asm_statement 'KP_parameter_decls 'extern_langauge_declaration 'function_declarator_extension 'pointer 'direct_declarator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'array_declarator_extension 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'gnu_attribute_spec 'pointer_qualifier 'label 'struct_or_union_body 'enumerator 'gnu_attribute_argument 'assignment_operator 'direct_abstract_declarator 'type_id 'enumerator_value 'pre_increment_decrement_operator 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'error_statement 'struct_declaration 'unary_operator 'sizeof_expression 'alignof_expression 'goto_statement 'continue_statement 'break_statement 'return_statement 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'struct_bit_field_size 'sub_struct_declarators 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'translation_unit = 'function_definition 'compound_statement 'asm_statement 'KP_parameter_decls 'extern_langauge_declaration 'function_declarator_extension 'pointer 'direct_declarator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'array_declarator_extension 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'gnu_attribute_spec 'pointer_qualifier 'label 'struct_or_union_body 'enumerator 'gnu_attribute_argument 'assignment_operator 'direct_abstract_declarator 'type_id 'enumerator_value 'pre_increment_decrement_operator 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'error_statement 'struct_declaration 'unary_operator 'sizeof_expression 'alignof_expression 'goto_statement 'continue_statement 'break_statement 'return_statement 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'struct_bit_field_size 'sub_struct_declarators 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'function_definition_or_declaration = 'function_definition 'compound_statement 'asm_statement 'KP_parameter_decls 'extern_langauge_declaration 'function_declarator_extension 'pointer 'direct_declarator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'array_declarator_extension 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'gnu_attribute_spec 'pointer_qualifier 'label 'struct_or_union_body 'enumerator 'gnu_attribute_argument 'assignment_operator 'direct_abstract_declarator 'type_id 'enumerator_value 'pre_increment_decrement_operator 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'error_statement 'struct_declaration 'unary_operator 'sizeof_expression 'alignof_expression 'goto_statement 'continue_statement 'break_statement 'return_statement 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'struct_bit_field_size 'sub_struct_declarators 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'function_definition = 'KP_parameter_decls 'compound_statement 'function_declarator_extension 'pointer 'direct_declarator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'array_declarator_extension 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'pointer_qualifier 'function_definition 'extern_langauge_declaration 'label 'struct_or_union_body 'enumerator 'assignment_operator 'gnu_attribute_spec 'direct_abstract_declarator 'type_id 'enumerator_value 'pre_increment_decrement_operator 'initialization 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'asm_statement 'error_statement 'struct_declaration 'unary_operator 'sizeof_expression 'alignof_expression 'gnu_attribute_argument 'goto_statement 'continue_statement 'break_statement 'return_statement 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'struct_bit_field_size 'sub_struct_declarators 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'function_header = 'function_declarator_extension 'pointer 'direct_declarator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'array_declarator_extension 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'pointer_qualifier 'struct_or_union_body 'enumerator 'assignment_operator 'gnu_attribute_spec 'direct_abstract_declarator 'type_id 'enumerator_value 'pre_increment_decrement_operator 'struct_declaration 'unary_operator 'sizeof_expression 'alignof_expression 'gnu_attribute_argument 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'struct_bit_field_size 'sub_struct_declarators 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'preprocessor_function_header = 'function_declarator_extension 'pointer 'direct_declarator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'array_declarator_extension 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'pointer_qualifier 'struct_or_union_body 'enumerator 'assignment_operator 'gnu_attribute_spec 'direct_abstract_declarator 'type_id 'enumerator_value 'pre_increment_decrement_operator 'struct_declaration 'unary_operator 'sizeof_expression 'alignof_expression 'gnu_attribute_argument 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'struct_bit_field_size 'sub_struct_declarators 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'preprocessor = ;
'KP_parameter_decls = ;
% 'KP_simple_declaration = 'enum_specifier 'size_qualifier 'pointer 'direct_declarator 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'type_id 'function_declarator_extension 'array_declarator_extension 'complex_specifier 'elf_specifier 'enumerator 'pointer_qualifier 'enumerator_value 'parameter_declaration 'comma_dotdotdot 'struct_or_union_body 'assignment_operator 'pre_increment_decrement_operator 'struct_declaration 'gnu_attribute_spec 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'gnu_attribute_argument 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'struct_bit_field_size 'sub_struct_declarators 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'KP_simple_type_name = 'enum_specifier 'size_qualifier 'type_id 'enumerator 'enumerator_value ;
'size_qualifier = ;
% 'declaration = 'extern_langauge_declaration 'pointer 'direct_declarator 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'function_declarator_extension 'array_declarator_extension 'complex_specifier 'enum_specifier 'elf_specifier 'gnu_attribute_spec 'pointer_qualifier 'parameter_declaration 'comma_dotdotdot 'struct_or_union_body 'enumerator 'gnu_attribute_argument 'assignment_operator 'type_id 'enumerator_value 'pre_increment_decrement_operator 'struct_declaration 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'struct_bit_field_size 'sub_struct_declarators 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'init_declarator_list = 'initialization 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'pointer_qualifier 'type_qualifier 'gnu_attribute_argument 'storage_class_specifier 'type_specifier 'alignment_specifier 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'assignment_operator 'pre_increment_decrement_operator 'struct_or_union_body 'enumerator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'type_id 'enumerator_value 'constructor_expression 'cast_operator 'struct_declaration 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name 'struct_bit_field_size 'sub_struct_declarators ;
%%% 'extern_langauge_declaration = 'pointer 'direct_declarator 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'function_declarator_extension 'array_declarator_extension 'complex_specifier 'enum_specifier 'elf_specifier 'gnu_attribute_spec 'pointer_qualifier 'parameter_declaration 'comma_dotdotdot 'struct_or_union_body 'enumerator 'gnu_attribute_argument 'assignment_operator 'type_id 'enumerator_value 'pre_increment_decrement_operator 'struct_declaration 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'struct_bit_field_size 'sub_struct_declarators 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'null_declaration = ;
% 'semi = ;
% 'declaration_specifiers = 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'complex_specifier 'enum_specifier 'elf_specifier 'struct_or_union_body 'enumerator 'type_id 'enumerator_value 'struct_declaration 'struct_bit_field_size 'sub_struct_declarators 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'pointer_qualifier 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'declaration_specifier = 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'complex_specifier 'enum_specifier 'elf_specifier 'struct_or_union_body 'enumerator 'type_id 'enumerator_value 'struct_declaration 'struct_bit_field_size 'sub_struct_declarators 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'pointer_qualifier 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'struct_or_union_specifier = 'struct_or_union_body 'struct_declaration 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'struct_bit_field_size 'sub_struct_declarators 'complex_specifier 'enum_specifier 'elf_specifier 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'enumerator 'pointer_qualifier 'gnu_attribute_argument 'type_id 'enumerator_value 'parameter_declaration 'comma_dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'identifier_or_struct_or_union_body = 'struct_or_union_body 'struct_declaration 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'struct_bit_field_size 'sub_struct_declarators 'complex_specifier 'enum_specifier 'elf_specifier 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'enumerator 'pointer_qualifier 'gnu_attribute_argument 'type_id 'enumerator_value 'parameter_declaration 'comma_dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'struct_or_union_body = 'struct_declaration 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'struct_bit_field_size 'sub_struct_declarators 'complex_specifier 'enum_specifier 'elf_specifier 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'enumerator 'pointer_qualifier 'gnu_attribute_argument 'type_id 'enumerator_value 'parameter_declaration 'comma_dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'struct_declaration_list = 'struct_declaration 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'struct_bit_field_size 'sub_struct_declarators 'complex_specifier 'enum_specifier 'elf_specifier 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'enumerator 'pointer_qualifier 'gnu_attribute_argument 'type_id 'enumerator_value 'parameter_declaration 'comma_dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'struct_declaration = 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'struct_bit_field_size 'sub_struct_declarators 'complex_specifier 'enum_specifier 'elf_specifier 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'enumerator 'pointer_qualifier 'gnu_attribute_argument 'type_id 'enumerator_value 'parameter_declaration 'comma_dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'struct_declaration_ = 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'struct_bit_field_size 'sub_struct_declarators 'complex_specifier 'enum_specifier 'elf_specifier 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'enumerator 'pointer_qualifier 'gnu_attribute_argument 'type_id 'enumerator_value 'parameter_declaration 'comma_dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'struct_declarator_list = 'struct_bit_field_size 'sub_struct_declarators 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'pointer_qualifier 'type_qualifier 'gnu_attribute_argument 'storage_class_specifier 'type_specifier 'alignment_specifier 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'assignment_operator 'pre_increment_decrement_operator 'enumerator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'type_id 'enumerator_value 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'struct_declarator = 'struct_bit_field_size 'sub_struct_declarators 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'pointer_qualifier 'type_qualifier 'gnu_attribute_argument 'storage_class_specifier 'type_specifier 'alignment_specifier 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'assignment_operator 'pre_increment_decrement_operator 'enumerator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'type_id 'enumerator_value 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'struct_bit_field_size = ;
%%% 'sub_struct_declarators = 'struct_bit_field_size 'sub_struct_declarators 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'pointer_qualifier 'type_qualifier 'gnu_attribute_argument 'storage_class_specifier 'type_specifier 'alignment_specifier 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'enum_specifier 'elf_specifier 'assignment_operator 'pre_increment_decrement_operator 'enumerator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'type_id 'enumerator_value 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'decl_qualifier = 'storage_class_specifier 'type_qualifier 'percpu_specifier ;
'percpu_specifier = ;
% 'percpu_ = ;
'declspec_specifier = 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'complex_specifier 'enum_specifier 'elf_specifier 'enumerator 'type_id 'enumerator_value ;
%%% 'printf_specifier = 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'printf_ = ;
'storage_class_specifier = ;
% 'typedef_specifier = ;
% 'extern_specifier = ;
% 'static_specifier = ;
% 'thread_local_specifier = ;
% 'auto_specifier = ;
% 'register_specifier = ;
% 'near_far_specifier = ;
% 'local_specifier = ;
% 'vector_specifier = ;
'type_specifier = 'complex_specifier 'enum_specifier 'elf_specifier 'type_qualifier 'enumerator 'type_id 'enumerator_value ;
% 'void_specifier = ;
% 'char_specifier = ;
% 'short_specifier = ;
% 'int_specifier = ;
% 'long_specifier = ;
% 'float_specifier = ;
% 'double_specifier = ;
% 'signed_specifier = ;
% 'unsigned_specifier = ;
% 'bool_specifier = ;
'complex_specifier = 'type_qualifier 'type_id ;
% 'complex_ = ;
'atomic_type_specifier = ;
% 'typedef_name = ;
'typeof_specifier = 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'typeof_ = ;
% 'expression_or_type_name = 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'simple_type_or_qualifier = 'type_qualifier 'type_id ;
'elf_specifier = ;
'type_qualifier = ;
% 'gnu_type_qualifier = 'gnu_attribute_spec 'gnu_attribute_argument 'type_qualifier 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'linux_type_qualifier = 'upper_macro_name 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator ;
% 'const_specifier = ;
% 'volatile_specifier = ;
% 'restrict_specifier = ;
% 'atomic_specifier = ;
% 'weak_specifier = ;
% 'initdata_specifier = ;
% 'function_specifier = ;
% 'inline_specifier = ;
% 'noreturn_specifier = ;
'alignment_specifier = ;
% 'alignas_ = ;
% 'simple_type_name = 'type_id ;
'type_id = ;
% 'struct_or_union = ;
'enum_specifier = 'enumerator 'enumerator_value ;
% 'enumerator_list = 'enumerator 'enumerator_value ;
'enumerator = 'enumerator_value ;
% 'enumerator_name = ;
'enumerator_value = ;
% 'init_declarator = 'initialization 'pointer 'direct_declarator 'gnu_attribute_spec 'function_declarator_extension 'array_declarator_extension 'pointer_qualifier 'type_qualifier 'gnu_attribute_argument 'storage_class_specifier 'type_specifier 'alignment_specifier 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'assignment_operator 'pre_increment_decrement_operator 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'type_id 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'declarator = 'pointer 'direct_declarator 'function_declarator_extension 'array_declarator_extension 'pointer_qualifier 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'parameter_declaration 'comma_dotdotdot 'complex_specifier 'assignment_operator 'pre_increment_decrement_operator 'gnu_attribute_spec 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'type_id 'constructor_expression 'cast_operator 'gnu_attribute_argument 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'direct_declarator = 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'complex_specifier 'type_id ;
% 'declarator_extension = 'function_declarator_extension 'array_declarator_extension 'type_qualifier 'parameter_declaration 'comma_dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'storage_class_specifier 'type_specifier 'alignment_specifier 'gnu_attribute_spec 'pointer 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'complex_specifier 'constructor_expression 'cast_operator 'gnu_attribute_argument 'pointer_qualifier 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'type_id 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'function_declarator_extension = 'type_qualifier 'parameter_declaration 'comma_dotdotdot 'storage_class_specifier 'type_specifier 'alignment_specifier 'gnu_attribute_spec 'pointer 'direct_abstract_declarator 'complex_specifier 'gnu_attribute_argument 'pointer_qualifier 'function_declarator_extension 'array_declarator_extension 'type_id 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'identifier_list = ;
'array_declarator_extension = 'type_qualifier 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'type_qualifier_list = 'type_qualifier ;
'pointer = 'pointer_qualifier 'type_qualifier ;
% 'pointer_qualifier_list = 'pointer_qualifier 'type_qualifier ;
'pointer_qualifier = 'type_qualifier ;
% 'type_name = 'pointer 'direct_abstract_declarator 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'complex_specifier 'pointer_qualifier 'function_declarator_extension 'array_declarator_extension 'parameter_declaration 'comma_dotdotdot 'type_id 'gnu_attribute_spec 'gnu_attribute_argument 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'type_specifiers = 'type_qualifier 'type_specifier 'complex_specifier 'type_id ;
% 'abstract_declarator = 'pointer 'direct_abstract_declarator 'pointer_qualifier 'function_declarator_extension 'array_declarator_extension 'type_qualifier 'parameter_declaration 'comma_dotdotdot 'storage_class_specifier 'type_specifier 'alignment_specifier 'gnu_attribute_spec 'complex_specifier 'gnu_attribute_argument 'type_id 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'direct_abstract_declarator = 'pointer 'direct_abstract_declarator 'function_declarator_extension 'array_declarator_extension 'type_qualifier 'pointer_qualifier 'parameter_declaration 'comma_dotdotdot 'storage_class_specifier 'type_specifier 'alignment_specifier 'gnu_attribute_spec 'complex_specifier 'gnu_attribute_argument 'type_id 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'parameter_type_list = 'parameter_declaration 'comma_dotdotdot 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'gnu_attribute_spec 'pointer 'direct_abstract_declarator 'complex_specifier 'gnu_attribute_argument 'pointer_qualifier 'function_declarator_extension 'array_declarator_extension 'type_id 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'parameter_declaration = 'parameter_declaration 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'gnu_attribute_spec 'pointer 'direct_abstract_declarator 'complex_specifier 'gnu_attribute_argument 'pointer_qualifier 'function_declarator_extension 'array_declarator_extension 'type_id 'assignment_operator 'comma_dotdotdot 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'comma_dotdotdot = ;
% 'parameter_declarator = 'gnu_attribute_spec 'pointer 'direct_abstract_declarator 'gnu_attribute_argument 'pointer_qualifier 'function_declarator_extension 'array_declarator_extension 'type_qualifier 'assignment_operator 'parameter_declaration 'comma_dotdotdot 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'storage_class_specifier 'type_specifier 'alignment_specifier 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'complex_specifier 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name 'type_id ;
'initialization = ;
% 'initializer = 'initializer_unit 'dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'initializer_unit = 'dotdotdot 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'colon_equals_or_equals = ;
'compound_initializer = ;
'dotdotdot = ;
% 'element_label = 'element_name_extension ;
'element_name_extension = ;
% 'element_name = ;
% 'preprocessor_list_initializer = ;
% 'statement = 'label 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'pointer 'assignment_operator 'pointer_qualifier 'function_definition 'type_qualifier 'unary_operator 'sizeof_expression 'alignof_expression 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'KP_parameter_decls 'constructor_expression 'cast_operator 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'number_units 'type_id 'equality_operator 'relational_operator 'upper_macro_name 'direct_abstract_declarator 'array_declarator_extension ;
'label = ;
% 'label_name = ;
% 'unlabeled_statement = 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'pointer 'assignment_operator 'label 'pointer_qualifier 'function_definition 'type_qualifier 'unary_operator 'sizeof_expression 'alignof_expression 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'KP_parameter_decls 'constructor_expression 'cast_operator 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'number_units 'type_id 'equality_operator 'relational_operator 'upper_macro_name 'direct_abstract_declarator 'array_declarator_extension ;
% 'gnu_statement = 'error_statement ;
'error_statement = ;
% 'structured_statement = 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'else_statement 'expression_list 'label 'function_definition 'expression_statement 'error_statement 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'assignment_operator 'KP_parameter_decls 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'pointer 'unary_operator 'sizeof_expression 'alignof_expression 'gnu_attribute_argument 'constructor_expression 'cast_operator 'parameter_declaration 'comma_dotdotdot 'pointer_qualifier 'type_id 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'direct_abstract_declarator 'equality_operator 'relational_operator 'upper_macro_name 'array_declarator_extension ;
% 'simple_statement = 'expression_statement 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'pointer 'assignment_operator 'pointer_qualifier 'type_qualifier 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'null_statement = ;
'compound_statement = 'function_definition 'label 'KP_parameter_decls 'compound_statement 'function_declarator_extension 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'asm_statement 'error_statement 'complex_specifier 'gnu_attribute_spec 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'parameter_declaration 'comma_dotdotdot 'pointer 'assignment_operator 'gnu_attribute_argument 'type_id 'pointer_qualifier 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'array_declarator_extension 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'block_item_list = 'function_definition 'label 'KP_parameter_decls 'compound_statement 'function_declarator_extension 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'asm_statement 'error_statement 'complex_specifier 'gnu_attribute_spec 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'parameter_declaration 'comma_dotdotdot 'pointer 'assignment_operator 'gnu_attribute_argument 'type_id 'pointer_qualifier 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'array_declarator_extension 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'block_item = 'function_definition 'label 'KP_parameter_decls 'compound_statement 'function_declarator_extension 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'asm_statement 'error_statement 'complex_specifier 'gnu_attribute_spec 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'parameter_declaration 'comma_dotdotdot 'pointer 'assignment_operator 'gnu_attribute_argument 'type_id 'pointer_qualifier 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'array_declarator_extension 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'declaration_or_statement = 'function_definition 'label 'KP_parameter_decls 'compound_statement 'function_declarator_extension 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'asm_statement 'error_statement 'complex_specifier 'gnu_attribute_spec 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'parameter_declaration 'comma_dotdotdot 'pointer 'assignment_operator 'gnu_attribute_argument 'type_id 'pointer_qualifier 'direct_abstract_declarator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'array_declarator_extension 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'expression_statement = 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'assignment_operator 'expression_statement 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'assign_assignment_expression = 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'comma_expression_statement = 'expression_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'assignment_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'if_statement = 'else_statement 'expression_list 'label 'if_statement 'expression_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'assignment_operator 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'pointer 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'pointer_qualifier 'function_definition 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'KP_parameter_decls 'integer_constant 'floating_constant 'character_constant 'dotdot 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'number_units 'equality_operator 'relational_operator 'upper_macro_name 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'type_id 'direct_abstract_declarator 'array_declarator_extension ;
% 'sub_statement = 'label 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'pointer 'assignment_operator 'pointer_qualifier 'function_definition 'type_qualifier 'unary_operator 'sizeof_expression 'alignof_expression 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'KP_parameter_decls 'constructor_expression 'cast_operator 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'number_units 'type_id 'equality_operator 'relational_operator 'upper_macro_name 'direct_abstract_declarator 'array_declarator_extension ;
'switch_statement = 'expression_list 'label 'assignment_operator 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'pre_increment_decrement_operator 'goto_statement 'continue_statement 'break_statement 'return_statement 'assign_assignment_expression 'comma_expression_statement 'else_statement 'unary_operator 'sizeof_expression 'alignof_expression 'pointer 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'pointer_qualifier 'function_definition 'integer_constant 'floating_constant 'character_constant 'dotdot 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'KP_parameter_decls 'number_units 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'equality_operator 'relational_operator 'upper_macro_name 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'type_id 'direct_abstract_declarator 'array_declarator_extension ;
'else_statement = 'if_statement 'else_statement 'expression_list 'label 'expression_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'assignment_operator 'pointer 'unary_operator 'sizeof_expression 'alignof_expression 'pointer_qualifier 'function_definition 'constructor_expression 'cast_operator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'KP_parameter_decls 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'equality_operator 'relational_operator 'upper_macro_name 'type_id 'direct_abstract_declarator 'array_declarator_extension ;
% 'else_sub_statement = 'if_statement 'else_statement 'expression_list 'label 'expression_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'assignment_operator 'pointer 'unary_operator 'sizeof_expression 'alignof_expression 'pointer_qualifier 'function_definition 'constructor_expression 'cast_operator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'KP_parameter_decls 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'equality_operator 'relational_operator 'upper_macro_name 'type_id 'direct_abstract_declarator 'array_declarator_extension ;
'while_statement = 'else_statement 'expression_list 'label 'if_statement 'expression_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'assignment_operator 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'pointer 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'pointer_qualifier 'function_definition 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'KP_parameter_decls 'integer_constant 'floating_constant 'character_constant 'dotdot 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'number_units 'equality_operator 'relational_operator 'upper_macro_name 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'type_id 'direct_abstract_declarator 'array_declarator_extension ;
'do_statement = 'expression_list 'label 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'else_statement 'assignment_operator 'pointer 'unary_operator 'sizeof_expression 'alignof_expression 'pointer_qualifier 'function_definition 'constructor_expression 'cast_operator 'type_qualifier 'storage_class_specifier 'type_specifier 'alignment_specifier 'initialization 'KP_parameter_decls 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'equality_operator 'relational_operator 'upper_macro_name 'type_id 'direct_abstract_declarator 'array_declarator_extension ;
% 'do_while_condition = 'expression_list 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'for_statement = 'expression_list 'label 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'assignment_operator 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'complex_specifier 'gnu_attribute_spec 'pre_increment_decrement_operator 'goto_statement 'continue_statement 'break_statement 'return_statement 'assign_assignment_expression 'comma_expression_statement 'else_statement 'unary_operator 'sizeof_expression 'alignof_expression 'pointer 'gnu_attribute_argument 'constructor_expression 'cast_operator 'type_id 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'pointer_qualifier 'function_definition 'integer_constant 'floating_constant 'character_constant 'dotdot 'KP_parameter_decls 'number_units 'function_declarator_extension 'equality_operator 'relational_operator 'upper_macro_name 'parameter_declaration 'comma_dotdotdot 'direct_abstract_declarator 'array_declarator_extension ;
% 'non_null_declaration = 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'complex_specifier 'gnu_attribute_spec 'gnu_attribute_argument 'type_id 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'semi_opt_expression_list = 'expression_list 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'jump_statement = 'goto_statement 'continue_statement 'break_statement 'return_statement 'pointer 'pointer_qualifier 'type_qualifier 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
%%% 'goto_statement = 'pointer 'pointer_qualifier 'type_qualifier 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'continue_statement = ;
'break_statement = ;
'return_statement = 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'asm_statement = ;
% 'asm_spec = 'type_qualifier ;
% 'asm_item = ;
% 'asm_ = ;
'expression_list = 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'comma_empty_brackets = ;
% 'empty_brackets = ;
% 'condition = 'expression_list 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'expression = 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'constant_expression = ;
% 'assignment_expression = 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'unary_expression_assign = 'assignment_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'assignment_operator = ;
% 'conditional_expression = 'conditional_operation 'logical_OR_operator 'logical_AND_operator 'bit_OR_operator 'bit_XOR_operator 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
'conditional_operation = ;
% 'logical_OR_expression = 'logical_OR_operator 'logical_AND_operator 'bit_OR_operator 'bit_XOR_operator 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
% 'OR_logical_AND_expression = 'logical_OR_operator 'logical_AND_operator 'bit_OR_operator 'bit_XOR_operator 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
'logical_OR_operator = ;
% 'logical_AND_expression = 'logical_AND_operator 'bit_OR_operator 'bit_XOR_operator 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
% 'AND_inclusive_OR_expression = 'logical_AND_operator 'bit_OR_operator 'bit_XOR_operator 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
'logical_AND_operator = ;
% 'inclusive_OR_expression = 'bit_OR_operator 'bit_XOR_operator 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
% 'OR_exclusive_OR_expression = 'bit_OR_operator 'bit_XOR_operator 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
'bit_OR_operator = ;
% 'exclusive_OR_expression = 'bit_XOR_operator 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
% 'exclusive_OR_AND_expression = 'bit_XOR_operator 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
'bit_XOR_operator = ;
% 'AND_expression = 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
% 'AND_equality_expression = 'bit_AND_operator 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
'bit_AND_operator = ;
% 'equality_expression = 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
% 'equality_relational_expression = 'equality_operator 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'upper_macro_name ;
'equality_operator = ;
% 'relational_expression = 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'upper_macro_name ;
% 'relational_shift_expression = 'relational_operator 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'upper_macro_name ;
'relational_operator = ;
% 'shift_expression = 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'shift_additive_expression = 'shift_operator 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'shift_operator = ;
% 'additive_expression = 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'add_subtract_multiplicative_expression = 'additive_operator 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'additive_operator = ;
% 'multiplicative_expression = 'cast_operator 'multiplicative_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
% 'multipy_divide_cast_expression = 'multiplicative_operator 'cast_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'multiplicative_operator = ;
% 'cast_expression = 'cast_operator 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'cast_operator = ;
% 'unary_expression = 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'pre_increment_decrement_operator = ;
% 'sub_unary_expression = 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'pre_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'unary_operator = ;
'sizeof_expression = 'pre_increment_decrement_operator 'unary_operator 'sizeof_expression 'alignof_expression 'constructor_expression 'cast_operator 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'alignof_expression = ;
% 'alignof_specifier = ;
% 'postfix_expression = 'constructor_expression 'parenthesized_expression 'generic_selection 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'integer_constant 'floating_constant 'character_constant 'expression_list 'dotdot 'number_units 'equality_operator 'relational_operator 'upper_macro_name ;
'constructor_expression = ;
% 'primary_expression = 'parenthesized_expression 'generic_selection 'integer_constant 'floating_constant 'character_constant 'expression_list 'number_units ;
% 'identifier = ;
'parenthesized_expression = 'expression_list ;
'generic_selection = ;
% 'generic_assoc_list = ;
% 'generic_association = ;
% 'postfix_extension = 'subscript_extension 'arguments_extension 'field_access_extension 'dereference_extension 'post_increment_decrement_operator 'dotdot 'equality_operator 'relational_operator 'upper_macro_name ;
'subscript_extension = ;
'field_access_extension = ;
'dereference_extension = ;
'post_increment_decrement_operator = ;
'arguments_extension = 'dotdot 'equality_operator 'relational_operator 'upper_macro_name ;
% 'argument_expression_list = 'equality_operator 'relational_operator 'upper_macro_name ;
'dotdot = ;
% 'argument_expression = 'equality_operator 'relational_operator 'upper_macro_name ;
%%% 'structured_statement_expression = 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'else_statement 'expression_list 'label 'function_definition 'expression_statement 'error_statement 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'KP_parameter_decls 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'complex_specifier 'gnu_attribute_spec 'function_declarator_extension 'pointer 'assignment_operator 'gnu_attribute_argument 'parameter_declaration 'comma_dotdotdot 'pointer_qualifier 'type_id 'direct_abstract_declarator 'array_declarator_extension ;
% 'constant = 'integer_constant 'floating_constant 'character_constant 'number_units ;
'integer_constant = 'number_units ;
'number_units = ;
'floating_constant = ;
'character_constant = ;
'string_literal = 'pseudo_string 'register_spec ;
% 'string_unit = 'pseudo_string 'register_spec ;
'pseudo_string = 'register_spec ;
% 'pseudo_string_name = ;
% 'pseudo_string_arguments = 'register_spec ;
% 'pseudo_string_argument_list = 'register_spec ;
% 'pseudo_string_argument = 'register_spec ;
'register_spec = ;
% 'gnu_attributes = 'gnu_attribute_spec 'gnu_attribute_argument 'type_qualifier ;
% 'gnu_attributes_or_asm = 'gnu_attribute_spec 'gnu_attribute_argument 'type_qualifier ;
'gnu_attribute_spec = 'gnu_attribute_argument 'type_qualifier ;
% 'acquires_releases_ = ;
% 'attribute_ = ;
% 'gnu_attribute_extension = 'type_qualifier 'gnu_attribute_argument ;
% 'gnu_attribute_name = 'type_qualifier ;
% 'gnu_attribute_arguments = 'gnu_attribute_argument ;
'gnu_attribute_argument = 'gnu_attribute_argument ;
% 'token_or_key = ;
'machinestart_declaration = 'expression_list ;
% 'machine_start_ = ;
'macro_declaration_or_statement = 'identifier_equals 'upper_macro_name ;
'identifier_equals = ;
'macro_call = 'macro_name 'macro_argument ;
'upper_macro_call = 'upper_macro_name 'macro_argument ;
% 'macro_arguments = 'macro_argument ;
'macro_argument = 'macro_argument ;
% 'equals_initializer = ;
'macro_name = ;
'upper_macro_name = ;
% 'statement_declaration_or_end = 'label 'expression_statement 'if_statement 'for_statement 'while_statement 'switch_statement 'do_statement 'compound_statement 'asm_statement 'error_statement 'storage_class_specifier 'type_specifier 'type_qualifier 'alignment_specifier 'initialization 'goto_statement 'continue_statement 'break_statement 'return_statement 'pre_increment_decrement_operator 'assign_assignment_expression 'comma_expression_statement 'else_statement 'expression_list 'complex_specifier 'gnu_attribute_spec 'pointer 'assignment_operator 'pointer_qualifier 'function_definition 'type_id 'gnu_attribute_argument 'KP_parameter_decls 'function_declarator_extension 'parameter_declaration 'comma_dotdotdot 'direct_abstract_declarator 'array_declarator_extension ;
'unknown_declaration_or_statement = ;
% 'semi_or_end_scope = ;
% 'unknown_item = ;
